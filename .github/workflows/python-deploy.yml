# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Bump patch version and commit to main
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Bump patch version and commit to main
      run: |
        git config --global user.email "ci-automation@github.com"
        git config --global user.name "CI Automation"
        git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git pull github "${GITHUB_REF}" --ff-only
        poetry version "${RELEASE_VERSION}"

        git add pyproject.toml

        git commit -m "[Automation] Create release for ${RELEASE_VERSION}"
        git push github HEAD:main
    - name: Build and publish
      run: |
        poetry publish --build -u "${{ secrets.PYPI_USERNAME }}" -p "${{ secrets.PYPI_PASSWORD }}"

